#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
 
#define optimize() ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
#define endl '\n'
 
const int mx = 2e5+123;
int a[mx];
ll preSum[mx];
 
int main()
{
    optimize();
 
    int n, q;
    cin >> n >> q;
 
    for ( int i = 1; i <= n; i++ ) cin >> a[i];
 
    for ( int i = 1; i <= n; i++ ) {
        preSum[i] = preSum[i-1] + a[i];
    }
 
    while ( q-- ) {
        int l, r;
        cin >> l >> r;
        // if index is 0 based then l++,r++;
        cout << ( preSum[r] - preSum[l-1] ) << endl;
    }
 
    return 0;
}

Practice Problem:
1. https://cses.fi/problemset/task/1646/ 
2. https://www.spoj.com/problems/CSUMQ/
3. https://leetcode.com/problems/running-sum-of-1d-array/description/
4. https://leetcode.com/problems/sum-of-all-odd-length-subarrays/description/
5. https://cses.fi/problemset/task/1650/
6.https://cses.fi/problemset/task/1661/
